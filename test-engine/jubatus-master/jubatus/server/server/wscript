# -*- python -*-

def options(opt):
  pass

def configure(conf):
  if conf.env.HAVE_ZOOKEEPER_H:
    conf.check_cxx(msg = 'Checking for compiler TLS extension support',
                   fragment='__thread int i; int main() { return 0; }',
                   errmsg = 'no (Jubatus officially support GCC 4.4 or later)')


def build_one(bld, name, libraries = '', sources = ''):
  __sources = '%s_impl.cpp %s_serv.cpp ' % (name, name)
  __sources += sources

  bld.program(
    source = __sources,
    target = 'juba'+name,
    includes = '.',
    use = 'JUBATUS_CORE client_headers jubaserv_framework jubaserv_fv_converter jubaserv_common jubaserv_mprpc_common %s JUBATUS_MPIO JUBATUS_MSGPACK-RPC MSGPACK' % libraries
    )
  if 'HAVE_ZOOKEEPER_H' in bld.env.define_key:
    bld.program(
      source = '%s_proxy.cpp ' % name,
      target = 'juba%s_proxy' % name,
      includes = '.',
      use = 'JUBATUS_CORE jubaserv_framework jubaserv_fv_converter jubaserv_common jubaserv_mprpc_common JUBATUS_MPIO JUBATUS_MSGPACK-RPC MSGPACK'
      )

def build(bld):
  for engine in bld.env['JUBATUS_ENGINES']:
    build_one(bld, engine)
    bld.install_files('${PREFIX}/share/jubatus/idl/', engine + '.idl')
