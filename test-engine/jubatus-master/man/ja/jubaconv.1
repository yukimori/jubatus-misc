.\" Man page generated from reStructuredText.
.
.TH "JUBACONV" "1" " " "" "Jubatus"
.SH NAME
jubaconv \- jubaconv
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
jubaconv [options ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
\fBjubaconv\fP は fv_converter の設定をテストするためのツールである。
.sp
\fBjubaconv\fP は fv_converter 内部の動作をシミュレーションし、変換結果をコマンドラインで表示することができる。
.sp
\fBjubaconv\fP は 1 件のデータだけを対象に処理を行うため、文字列特徴抽出ルール (\fBstring_rules\fP) の \fBglobal_weight\fP は計算されない。
\fBglobal_weight\fP も含めたシミュレーションが必要な場合は \&../api/api_weight を使用すること。
.SS Options
.INDENT 0.0
.IP \(bu 2
\fB[]\fP はデフォルト値を意味する。
.UNINDENT
.INDENT 0.0
.TP
.B \-i <format>, \-\-input\-format <format>
入力のフォーマット。 [json]
.sp
\fB<format>\fP には \fBdatum\fP または \fBjson\fP のいずれかを指定する。
.UNINDENT
.INDENT 0.0
.TP
.B \-o <format>, \-\-output\-format <format>
出力のフォーマット。 [fv]
.sp
\fB<format>\fP には \fBfv\fP, \fBdatum\fP または \fBjson\fP のいずれかを指定する。
.UNINDENT
.INDENT 0.0
.TP
.B \-c <config>, \-\-conf <config>
JSON で記述された Jubatus サーバの設定ファイル。
.sp
\fI\%\-o\fP に \fBfv\fP が指定されている場合のみ、このオプションを指定する必要がある。
.UNINDENT
.INDENT 0.0
.IP \(bu 2
.INDENT 2.0
.TP
.B 注意: 入力のフォーマットに \fBjson\fP を指定した場合、 Jubatusサーバ設定ファイルの \fBkey\fP の先頭には、スラッシュ \fB/\fP をつける必要がある。
.INDENT 7.0
.IP \(bu 2
入力フォーマットが \fBdatum\fP の場合: \fB"num_rules" : [{"key": "number": "type": "num"}]\fP
.IP \(bu 2
入力フォーマットが \fBjson\fP の場合: \fB"num_rules" : [{"key": "/number": "type": "num"}]\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SH FILE FORMATS
.SS Input
.sp
\fBdatum\fP または \fBjson\fP がサポートされています。
詳細は Examples セクションを参照してください。
.INDENT 0.0
.IP \(bu 2
\fBdatum\fP は Datum 形式の JSON データ構造です。
ルートには 3 つのキー (\fBstring_values\fP, \fBnum_values\fP および \fBbinary_values\fP) を指定する必要があります。また、それぞれの値はフラットなオブジェクトで、そのキーは String 型、値は String 型 (\fBstring_values\fP と \fBbinary_values\fP の場合) または整数/浮動小数点型 (\fBnum_values\fP の場合) である必要があります。
.IP \(bu 2
\fBjson\fP は任意の JSON データ構造です。
JSON データ構造はキーを \fB/\fP で結合することによってフラットな key\-value データ構造に変換されます。
.UNINDENT
.SS Output
.sp
\fBfv\fP, \fBdatum\fP または \fBjson\fP がサポートされています。
.INDENT 0.0
.IP \(bu 2
\fBfv\fP は fv_converter によって入力データから抽出された特徴ベクトルを出力します。
.IP \(bu 2
\fBdatum\fP は入力データを Datum 形式の JSON データ構造に変換したものを出力します。
.IP \(bu 2
\fBjson\fP は入力データをそのまま、フォーマットした形で出力します。
このオプションは入力データのフォーマットが \fBjson\fP の場合のみ利用できます。
.UNINDENT
.SH EXAMPLES
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ cat data.json
{ "message": "hello world", "age": 31 }

$ jubaconv \-i json \-o fv \-c /opt/jubatus/share/jubatus/example/config/classifier/pa.json < data.json
/message$hello world@str#bin/bin: 1
/age@num: 31

$ cat datum.json
{
  "string_values": {
    "hello": "world"
  },
  "num_values": {
    "age": 31
  },
  "binary_values": {
  }
}

$ jubaconv \-i datum \-o fv \-c /opt/jubatus/share/jubatus/example/config/classifier/pa.json < datum.json
hello$world@str#bin/bin: 1
age@num: 31
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
PFN & NTT
.SH COPYRIGHT
2011-2017 PFN & NTT
.\" Generated by docutils manpage writer.
.
